datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                    String     @id @unique
  email                 String     @unique
  name                  String?
  stripeAccountId       String?    @unique
  stripeAccountVerified Boolean    @default(false)
  createdAt             DateTime   @default(now())
  updatedAt             DateTime   @updatedAt
  itemsForSale          Item[]     @relation("SellerItems")
  purchases             Purchase[] @relation("UserPurchases")
  payouts               Payout[]
}

model Item {
  id             String     @id @default(cuid())
  name           String
  description    String
  price          Float
  digitalFileUrl String
  sellerId       String
  seller         User       @relation("SellerItems", fields: [sellerId], references: [id])
  purchases      Purchase[]
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
}

model Purchase {
  id                    String         @id @default(cuid())
  itemId                String
  item                  Item           @relation(fields: [itemId], references: [id])
  buyerId               String
  buyer                 User           @relation("UserPurchases", fields: [buyerId], references: [id])
  purchasePrice         Float
  stripePaymentIntentId String         @unique
  status                PurchaseStatus @default(PENDING)
  createdAt             DateTime       @default(now())
}

model Payout {
  id               String       @id @default(cuid())
  sellerId         String
  seller           User         @relation(fields: [sellerId], references: [id])
  amount           Float
  status           PayoutStatus @default(PENDING)
  payoutDate       DateTime
  stripeTransferId String?      @unique
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
}

enum PurchaseStatus {
  PENDING
  COMPLETED
  FAILED
}

enum PayoutStatus {
  PENDING
  PROCESSING
  PAID
  FAILED
}
